# This file is generated by greenstar scripts. DO NOT EDIT.
openapi: 3.1.0
info:
  title: "GreenSTAR public API"
  description: "Public APIs used in the GreenSTAR Personal Accountant applications."
  contact:
    email: "arik@kfirs.com"
  version: "0.0.0+local"
servers:
  - url: "https://api.greenstar.local"
tags:
  - name: "Account"
  - name: "Tenant"
  - name: "Transaction"
paths:
  "/tenants/{tenantID}/accounts":
    parameters:
      - $ref: '#/components/parameters/TenantIDPathParameter'
    get:
      tags:
        - "Account"
      summary: Fetch list of accounts.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - name: _offset
          in: query
          schema:
            type: integer
            nullable: false
            example: 0
        - name: _count
          in: query
          schema:
            type: integer
            nullable: false
            example: 10
        - name: currency
          in: query
          schema:
            type: string
            nullable: true
        - name: displayName
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Accounts fetched.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    example: 0
                  totalCount:
                    type: integer
                    example: 100
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - "Account"
      summary: Create a new account.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccount'
      responses:
        '201':
          description: Account created.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  "/tenants/{tenantID}/accounts/{id}":
    parameters:
      - $ref: '#/components/parameters/TenantIDPathParameter'
      - $ref: '#/components/parameters/IDPathParameter'
    get:
      tags:
        - "Account"
      summary: Fetch account.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      responses:
        '200':
          description: Account fetched.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            # TODO: add ETag header to GET item response, and also add If-Match + If-NotMatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    patch:
      tags:
        - "Account"
      summary: Patch account.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        description: Partial account.
        content:
          application/json:
            required: true
            schema:
              $ref: '#/components/schemas/PatchAccount'
      responses:
        '200':
          description: Account updated.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - "Account"
      summary: Update account.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        description: New account properties.
        content:
          application/json:
            required: true
            schema:
              $ref: '#/components/schemas/UpdateAccount'
      responses:
        '200':
          description: Account updated.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - "Account"
      summary: Delete account.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      responses:
        '204':
          description: Account deleted.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  "/tenants":
    parameters:
      - $ref: '#/components/parameters/TenantIDPathParameter'
    get:
      tags:
        - "Tenant"
      summary: Fetch list of tenants.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - name: _offset
          in: query
          schema:
            type: integer
            nullable: false
            example: 0
        - name: _count
          in: query
          schema:
            type: integer
            nullable: false
            example: 10
        - name: id
          in: query
          schema:
            type: string
            nullable: true
        - name: displayName
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Tenants fetched.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    example: 0
                  totalCount:
                    type: integer
                    example: 100
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tenant'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - "Tenant"
      summary: Create a new tenant.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTenant'
      responses:
        '201':
          description: Tenant created.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  "/tenants/{id}":
    parameters:
      - $ref: '#/components/parameters/TenantIDPathParameter'
      - $ref: '#/components/parameters/IDPathParameter'
    get:
      tags:
        - "Tenant"
      summary: Fetch tenant.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      responses:
        '200':
          description: Tenant fetched.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            # TODO: add ETag header to GET item response, and also add If-Match + If-NotMatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    patch:
      tags:
        - "Tenant"
      summary: Patch tenant.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        description: Partial account.
        content:
          application/json:
            required: true
            schema:
              $ref: '#/components/schemas/PatchTenant'
      responses:
        '200':
          description: Tenant updated.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - "Tenant"
      summary: Update tenant.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        description: New account properties.
        content:
          application/json:
            required: true
            schema:
              $ref: '#/components/schemas/UpdateTenant'
      responses:
        '200':
          description: Tenant updated.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tenant'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - "Tenant"
      summary: Delete tenant.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      responses:
        '204':
          description: Tenant deleted.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  "/tenants/{tenantID}/transactions":
    parameters:
      - $ref: '#/components/parameters/TenantIDPathParameter'
    get:
      tags:
        - "Transaction"
      summary: Fetch list of transactions.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - name: _offset
          in: query
          schema:
            type: integer
            nullable: false
            example: 0
        - name: _count
          in: query
          schema:
            type: integer
            nullable: false
            example: 10
        - name: currency
          in: query
          schema:
            type: string
            nullable: true
        - name: minDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: maxDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: referenceId
          in: query
          schema:
            type: string
            nullable: true
        - name: minAmount
          in: query
          schema:
            type: number
            format: double
            nullable: true
        - name: maxAmount
          in: query
          schema:
            type: number
            format: double
            nullable: true
        - name: description
          in: query
          schema:
            type: string
            nullable: true
        - name: sourceAccountId
          in: query
          schema:
            type: string
            nullable: true
        - name: targetAccountId
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Transactions fetched.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    example: 0
                  totalCount:
                    type: integer
                    example: 100
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - "Transaction"
      summary: Create a new transaction.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTransaction'
      responses:
        '201':
          description: Transaction created.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  "/tenants/{tenantID}/transactions/{id}":
    parameters:
      - $ref: '#/components/parameters/TenantIDPathParameter'
      - $ref: '#/components/parameters/IDPathParameter'
    get:
      tags:
        - "Transaction"
      summary: Fetch transaction.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      responses:
        '200':
          description: Transaction fetched.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            # TODO: add ETag header to GET item response, and also add If-Match + If-NotMatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    patch:
      tags:
        - "Transaction"
      summary: Patch transaction.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        description: Partial account.
        content:
          application/json:
            required: true
            schema:
              $ref: '#/components/schemas/PatchTransaction'
      responses:
        '200':
          description: Transaction updated.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - "Transaction"
      summary: Update transaction.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        description: New account properties.
        content:
          application/json:
            required: true
            schema:
              $ref: '#/components/schemas/UpdateTransaction'
      responses:
        '200':
          description: Transaction updated.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - "Transaction"
      summary: Delete transaction.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      responses:
        '204':
          description: Transaction deleted.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
components:
  headers:
    X-Request-ID:
      schema:
        type: string
        format: uuid
        example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
      description: Unique request ID.
  parameters:
    X-Request-ID:
      name: X-Request-ID
      description: Unique ID assigned to each logical request.
      in: header
      schema:
        type: string
        format: uuid
        example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
    TenantIDPathParameter:
      name: tenantID
      description: The ID of the tenant context.
      in: path
      required: true
      schema:
        type: string
        example: acme
    IDPathParameter:
      name: id
      description: The ID of the object.
      in: path
      required: true
      schema:
        type: string
        example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
  responses:
    '400':
      description: Bad request.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
      content:
        plain/text:
          schema:
            type: string
          example: Bad request.
    '403':
      description: Forbidden.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
      content:
        plain/text:
          schema:
            type: string
          example: Access denied.
    '500':
      description: Internal error.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
      content:
        plain/text:
          schema:
            type: string
          example: An internal error has occurred.
  schemas:
    "Account":
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
        createdAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        updatedAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        "balance":
          type: number
          format: double
          nullable: true
        "displayName":
          type: string
          nullable: false
        "icon":
          type: string
          nullable: true
        "parentID":
          type: string
          nullable: true
        "totalIncomingAmount":
          type: number
          format: double
          nullable: true
        "totalOutgoingAmount":
          type: number
          format: double
          nullable: true
    "NewAccount":
      type: object
      properties:
        "balance":
          type: number
          format: double
          nullable: true
        "displayName":
          type: string
          nullable: false
        "icon":
          type: string
          nullable: true
        "parentID":
          type: string
          nullable: true
        "totalIncomingAmount":
          type: number
          format: double
          nullable: true
        "totalOutgoingAmount":
          type: number
          format: double
          nullable: true
    "PatchAccount":
      type: object
      properties:
        "balance":
          type: number
          format: double
          nullable: true
        "displayName":
          type: string
          nullable: true
        "icon":
          type: string
          nullable: true
        "parentID":
          type: string
          nullable: true
        "totalIncomingAmount":
          type: number
          format: double
          nullable: true
        "totalOutgoingAmount":
          type: number
          format: double
          nullable: true
    "UpdateAccount":
      type: object
      properties:
        "balance":
          type: number
          format: double
          nullable: true
        "displayName":
          type: string
          nullable: false
        "icon":
          type: string
          nullable: true
        "parentID":
          type: string
          nullable: true
        "totalIncomingAmount":
          type: number
          format: double
          nullable: true
        "totalOutgoingAmount":
          type: number
          format: double
          nullable: true
    "Tenant":
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
        createdAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        updatedAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        "displayName":
          type: string
          nullable: false
    "NewTenant":
      type: object
      properties:
        "displayName":
          type: string
          nullable: false
    "PatchTenant":
      type: object
      properties:
        "displayName":
          type: string
          nullable: true
    "UpdateTenant":
      type: object
      properties:
        "displayName":
          type: string
          nullable: false
    "Transaction":
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
        createdAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        updatedAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        "amount":
          type: number
          format: double
          nullable: false
        "convertedAmount":
          type: number
          format: double
          nullable: false
        "currency":
          type: string
          nullable: false
        "date":
          type: string
          format: date-time
          nullable: false
        "description":
          type: string
          nullable: true
        "referenceId":
          type: string
          nullable: false
        "sourceAccountId":
          type: string
          nullable: false
        "targetAccountId":
          type: string
          nullable: false
    "NewTransaction":
      type: object
      properties:
        "amount":
          type: number
          format: double
          nullable: false
        "currency":
          type: string
          nullable: false
        "date":
          type: string
          format: date-time
          nullable: false
        "description":
          type: string
          nullable: true
        "referenceId":
          type: string
          nullable: false
        "sourceAccountId":
          type: string
          nullable: false
        "targetAccountId":
          type: string
          nullable: false
    "PatchTransaction":
      type: object
      properties:
        "amount":
          type: number
          format: double
          nullable: true
        "currency":
          type: string
          nullable: true
        "date":
          type: string
          format: date-time
          nullable: true
        "description":
          type: string
          nullable: true
        "referenceId":
          type: string
          nullable: true
        "sourceAccountId":
          type: string
          nullable: true
        "targetAccountId":
          type: string
          nullable: true
    "UpdateTransaction":
      type: object
      properties:
        "amount":
          type: number
          format: double
          nullable: false
        "currency":
          type: string
          nullable: false
        "date":
          type: string
          format: date-time
          nullable: false
        "description":
          type: string
          nullable: true
        "referenceId":
          type: string
          nullable: false
        "sourceAccountId":
          type: string
          nullable: false
        "targetAccountId":
          type: string
          nullable: false
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: [ ]
