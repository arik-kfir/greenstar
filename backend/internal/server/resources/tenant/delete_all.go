// Code generated by greenstar scripts; DO NOT EDIT.

package tenant

import (
	"net/http"

	"github.com/arikkfir/greenstar/backend/internal/auth"
	"github.com/arikkfir/greenstar/backend/internal/server/util"
)

type DeleteAllRequest struct {
}

func (lr *DeleteAllRequest) UnmarshalFromRequest(r *http.Request) error {
	return nil
}

type DeleteAllResponse struct{}

func (s *Server) DeleteAll(w http.ResponseWriter, r *http.Request) {
	ctx := r.Context()

	l := util.Logger(ctx)
	if !auth.GetToken(ctx).IsPermittedForTenant(r.PathValue("id"), "tenants:delete") {
		util.ServeError(w, r, util.ErrForbidden)
		l.With("tenantID", r.PathValue("TenantPathVariableName")).WarnContext(ctx, "Access denied", "permission", "tenants:delete")
		return
	}

	req := DeleteAllRequest{}
	if err := req.UnmarshalFromRequest(r); err != nil {
		util.ServeError(w, r, err)
		return
	}

	err := s.h.DeleteAll(ctx, req)
	if err != nil {
		if code := util.ServeError(w, r, err); code >= http.StatusInternalServerError {
			l.ErrorContext(ctx, "Failed deleting tenant", "err", err)
		}
		return
	}

	w.WriteHeader(http.StatusNoContent)
}
