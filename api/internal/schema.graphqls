scalar Upload

type KeyAndValue {
  key: String!
  value: String!
}

type Account {
  id: ID!
  displayName: String!
  labels: [KeyAndValue!]!
  annotations: [KeyAndValue!]!
  children: [Account!]!
  parent: Account
}

type Query {
  roots: [Account!]!
  account(id: ID!): Account
}

input KeyAndValueInput {
    key: String!
    value: String!
}

input NewAccount {
  id: String
  displayName: String!
  labels: [KeyAndValueInput!]
  annotations: [KeyAndValueInput!]
  parentID: ID
}

input AccountUpdate {
  displayName: String
  labels: [KeyAndValueInput!]
  annotations: [KeyAndValueInput!]
  parentID: ID
}

type Mutation {
  createAccount(input: NewAccount!): Account!
  updateAccount(id: ID!, input: AccountUpdate!): Account!
  deleteAccount(id: ID!): ID!
  uploadTransactionsXLSFile(file: Upload!): Boolean!
  uploadTransactionsXLSXFile(file: Upload!): Boolean!
}
