name: Deploy

on:
  pull_request:
    types:
      - opened
      - synchronize
  issue_comment:
    types:
      - created
      - edited

defaults:
  run:
    shell: bash -euxo pipefail {0}

jobs:

  should-skip:
    name: Should skip?
    runs-on: ubuntu-22.04
    outputs:
      skip: ${{ steps.should-skip.outputs.skip }}
    steps:
      - run: |
          if [[ "${{github.event_name}}" == "issue_comment" && -z "${{github.event.issue.pull_request.number}}" ]]; then
            if [[ ! "${COMMENT}" =~ ^/deploy$ ]]; then
              SKIP="true"
            fi
          fi
          echo "skip=${SKIP:-false}" >> "$GITHUB_OUTPUT"
        env:
          COMMENT: ${{ github.event.comment.body }}

  backend-unit-tests:
    name: Backend Unit Tests
    runs-on: ubuntu-22.04
    needs: should-skip
    if: ${{ needs.should-skip.outputs.skip }} == "false"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum
      - run: go test ./...
        working-directory: backend

  build-images:
    strategy:
      matrix:
        image: [ backend, frontend, neo4j, migrations ]
      fail-fast: true
    name: Build ${{ matrix.image }}
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs: should-skip
    if: ${{ needs.should-skip.outputs.skip }} == "false"
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - if: matrix.image == 'frontend'
        run: |-
          cat > frontend/apply-patches.sh <<PATCHES_EOF
          ${{ secrets.FRONTEND_PATCHES }}
          PATCHES_EOF
      - uses: docker/setup-buildx-action@v2
        with:
          install: true
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.image }}
          tags: |
            type=sha,prefix=,suffix=,format=short
            type=sha,prefix=,suffix=,format=long
            type=ref,event=branch
            type=ref,event=pr
      - uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: ${{ matrix.image }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy-to-environment:
    name: Deploy
    needs: build-images
    uses: arikkfir/delivery/.github/workflows/deploy-to-environment.yml@main
    concurrency:
      group: deployment
      cancel-in-progress: false
    with:
      branch: ${{ github.head_ref }}
      images: |-
        ghcr.io/${{ github.repository }}/backend: ${{ github.sha }}
        ghcr.io/${{ github.repository }}/frontend: ${{ github.sha }}
        ghcr.io/${{ github.repository }}/migrations: ${{ github.sha }}
        ghcr.io/${{ github.repository }}/neo4j: ${{ github.sha }}
    secrets: inherit
