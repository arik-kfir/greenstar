{{- $prefix := include "greenstar.prefix" . -}}
{{- $componentName := "backend" -}}
{{- $serviceAccountName := printf "%s-%s" $prefix $componentName -}}
{{- $serviceName := printf "%s-%s" $prefix $componentName -}}
{{- /*------------------------------------------------------------------------------------------------------------*/ -}}
---

apiVersion: v1
kind: ServiceAccount
metadata:
  {{- if not (empty .Values.backend.rbac.annotations) }}
  annotations:
    {{ range $name, $value := .Values.backend.rbac.annotations -}}
    {{ $name }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ $serviceAccountName | quote }}

---

apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ $serviceName | quote }}
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    {{- include "greenstar.versionAgnosticLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ printf "%s-%s" $prefix $componentName | quote }}
spec:
  selector:
    matchLabels:
      {{- include "greenstar.versionAgnosticLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ $componentName | quote }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
      labels:
        {{- include "greenstar.commonLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ $componentName | quote }}
    spec:
      containers:
        - image: {{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          {{- if not (empty .Values.backend.extraArgs) }}
          args:
            {{- toYaml .Values.backend.extraArgs | nindent 12 }}
          {{- end }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.observability.logging.level | default "info" | quote }}
            {{- if eq .Values.observability.logging.format "text" }}
            - name: DISABLE_JSON_LOGGING
              value: "T"
            {{- end }}
            - name: HEALTH_PORT
              value: "9000"
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/etc/gcp-oidc/credential-configuration.json"
            - name: DESCOPE_PROJECT_ID
              value: {{ .Values.descope.project.id | quote }}
            - name: DESCOPE_MANAGEMENT_KEY_TOKEN
              value: {{ .Values.descope.managementKey.key | quote }}
            - name: DESCOPE_BACKEND_ACCESS_KEY_TOKEN
              value: {{ .Values.descope.accessKey.key | quote }}
            - name: PGHOST
              value: {{ printf "%s-%s" $prefix "postgres" | quote }}
            - name: PGPORT
              value: "5432"
            - name: PGDATABASE
              value: "greenstar"
            - name: PGUSER
              value: "greenstar_backend"
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s" $prefix "postgres" | quote }}
                  key: backend-pwd
                  optional: false
            - name: PGAPPNAME
              value: {{ printf "%s-%s" $prefix $componentName | quote }}
            - name: PGCONNECT_TIMEOUT
              value: {{ .Values.backend.postgres.connectTimeout | quote }}
            - name: PGSSLMODE
              value: "disable"
            - name: HTTP_ALLOWED_ORIGINS
              value: "https://signup.{{ .Values.ingress.domain }},https://app.{{ .Values.ingress.domain }},https://*.app.{{ .Values.ingress.domain }}"
            {{- if not (empty .Values.backend.extraEnv) }}
            {{- toYaml .Values.backend.extraEnv | nindent 12 }}
            {{- end }}
          name: {{ $componentName | quote }}
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8000
              name: metrics
            - containerPort: 9000
              name: health
          resources:
            limits:
              cpu: {{ .Values.backend.resources.limits.cpu | default "500m" | quote }}
              memory: {{ .Values.backend.resources.limits.memory | default "64Mi" | quote }}
            requests:
              cpu: {{ .Values.backend.resources.requests.cpu | default "100m" | quote }}
              memory: {{ .Values.backend.resources.requests.memory | default "64Mi" | quote }}
          livenessProbe:
            httpGet:
              port: health
              path: /healthz
            failureThreshold: 3
            periodSeconds: 5
            terminationGracePeriodSeconds: 30
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              port: health
              path: /healthz
            failureThreshold: 3
            periodSeconds: 1
            timeoutSeconds: 1
          startupProbe:
            httpGet:
              port: health
              path: /healthz
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 1
            terminationGracePeriodSeconds: 60
          volumeMounts:
            {{- if not (empty .Values.backend.volumeMounts) }}
            {{- toYaml .Values.backend.volumeMounts | nindent 12 }}
            {{- end }}
            - name: token
              mountPath: "/var/run/service-account"
              readOnly: true
            - name: gcp-oidc
              mountPath: "/etc/gcp-oidc"
              readOnly: true
      enableServiceLinks: false
      serviceAccountName: {{ $serviceAccountName | quote }}
      volumes:
        {{- if not (empty .Values.backend.volumes) }}
        {{- toYaml .Values.backend.volumes | nindent 8 }}
        {{- end }}
        - name: token
          projected:
            sources:
              - serviceAccountToken:
                  audience: {{ required "GCP OIDC audience is required" .Values.oidc.gcp.audience | quote }}
                  path: token
        - name: gcp-oidc
          configMap:
            name: gcp-oidc
{{- if .Values.backend.ingress.enabled }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ printf "%s-%s" $prefix "backend-http" | quote }}
spec:
  parentRefs:
    - name: {{ .Values.backend.ingress.parentRef.name }}
      namespace: {{ .Values.backend.ingress.parentRef.namespace }}
      sectionName: {{ .Values.backend.ingress.parentRef.httpSectionName }}
      kind: {{ .Values.backend.ingress.parentRef.kind }}
  hostnames:
    - {{ printf "api.%s" .Values.ingress.domain | quote }}
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      filters:
        - type: RequestRedirect
          requestRedirect:
            scheme: https
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  labels:
    {{- include "greenstar.commonLabels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $componentName | quote }}
  name: {{ printf "%s-%s" $prefix "backend-https" | quote }}
spec:
  parentRefs:
    - name: {{ .Values.backend.ingress.parentRef.name }}
      namespace: {{ .Values.backend.ingress.parentRef.namespace }}
      sectionName: {{ .Values.backend.ingress.parentRef.httpsSectionName }}
      kind: {{ .Values.backend.ingress.parentRef.kind }}
  hostnames:
    - {{ printf "api.%s" .Values.ingress.domain | quote }}
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: {{ $serviceName | quote }}
          namespace: {{ .Release.Namespace | quote }}
          port: 80
          kind: Service
{{- end }}
