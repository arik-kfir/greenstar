# This file is generated by greenstar scripts. DO NOT EDIT.
openapi: 3.1.0
info:
  title: "{{ .Metadata.DisplayName }}"
  description: "{{ .Metadata.Description }}"
  contact:
    email: "{{ .Metadata.Contact.Email }}"
  version: "{{ .Metadata.Version }}"
servers:
  - url: "{{ .Metadata.Server }}"
tags:
  {{- range .Models }}
  - name: "{{ .Name }}"
  {{- end }}
paths:
  {{- range .Models }}
  {{- $model := . }}
  "{{ if eq .Scope modelScopeTenant }}/tenants/{tenantID}{{ end }}{{ .Path }}":
    parameters:
      - $ref: '#/components/parameters/TenantIDPathParameter'
    {{- if ne .List nil }}
    get:
      tags:
        - "{{ .Name }}"
      summary: Fetch list of {{ .Name | lower | toPlural }}.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - name: _offset
          in: query
          schema:
            type: integer
            nullable: false
            example: 0
        - name: _count
          in: query
          schema:
            type: integer
            nullable: false
            example: 10
        {{- range .List.FilterProperties }}
        - name: {{ .Name | toLowerCamelCase }}
          in: query
          schema:
            type: {{ .OpenAPIType }}
            {{- if .OpenAPITypeFormat }}
            format: {{ .OpenAPITypeFormat }}
            {{- end }}
            nullable: true
        {{- end }}
      responses:
        '200':
          description: {{ .Name | toPlural }} fetched.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: object
                properties:
                  offset:
                    type: integer
                    example: 0
                  totalCount:
                    type: integer
                    example: 100
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/{{ .Name }}'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    {{- end }}
    {{- if ne .Create nil }}
    post:
      tags:
        - "{{ .Name }}"
      summary: Create a new {{ .Name | lower }}.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/New{{ .Name }}'
      responses:
        '201':
          description: {{ .Name }} created.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/{{ .Name }}'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    {{- end }}
  "{{ if eq .Scope modelScopeTenant }}/tenants/{tenantID}{{ end }}{{ .Path }}/{id}":
    parameters:
      - $ref: '#/components/parameters/TenantIDPathParameter'
      - $ref: '#/components/parameters/IDPathParameter'
    {{- if ne .Get nil }}
    get:
      tags:
        - "{{ .Name }}"
      summary: Fetch {{ .Name | lower }}.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      responses:
        '200':
          description: {{ .Name }} fetched.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
            # TODO: add ETag header to GET item response, and also add If-Match + If-NotMatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{ .Name }}'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    {{- end }}
    {{- if ne .Update nil }}
    patch:
      tags:
        - "{{ .Name }}"
      summary: Patch {{ .Name | lower }}.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        description: Partial account.
        content:
          application/json:
            required: true
            schema:
              $ref: '#/components/schemas/Patch{{ .Name }}'
      responses:
        '200':
          description: {{ .Name }} updated.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/{{ .Name }}'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - "{{ .Name }}"
      summary: Update {{ .Name | lower }}.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      requestBody:
        required: true
        description: New account properties.
        content:
          application/json:
            required: true
            schema:
              $ref: '#/components/schemas/Update{{ .Name }}'
      responses:
        '200':
          description: {{ .Name }} updated.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/{{ .Name }}'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    {{- end }}
    {{- if ne .Delete nil }}
    delete:
      tags:
        - "{{ .Name }}"
      summary: Delete {{ .Name | lower }}.
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
      responses:
        '204':
          description: {{ .Name }} deleted.
          headers:
            X-Request-ID:
              $ref: '#/components/headers/X-Request-ID'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
    {{- end }}
  {{- end }}
components:
  headers:
    X-Request-ID:
      schema:
        type: string
        format: uuid
        example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
      description: Unique request ID.
  parameters:
    X-Request-ID:
      name: X-Request-ID
      description: Unique ID assigned to each logical request.
      in: header
      schema:
        type: string
        format: uuid
        example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
    TenantIDPathParameter:
      name: tenantID
      description: The ID of the tenant context.
      in: path
      required: true
      schema:
        type: string
        example: acme
    IDPathParameter:
      name: id
      description: The ID of the object.
      in: path
      required: true
      schema:
        type: string
        example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
  responses:
    '400':
      description: Bad request.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
      content:
        plain/text:
          schema:
            type: string
          example: Bad request.
    '403':
      description: Forbidden.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
      content:
        plain/text:
          schema:
            type: string
          example: Access denied.
    '500':
      description: Internal error.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/X-Request-ID'
      content:
        plain/text:
          schema:
            type: string
          example: An internal error has occurred.
  schemas:
    {{- range .Models }}
    "{{ .Name }}":
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 0e9bc950-bb20-4ef3-b18d-e62dbbd202dd
        createdAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        updatedAt:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        {{- range .Properties }}
        "{{ .Name | toLowerCamelCase }}":
          type: {{ .OpenAPIType }}
          {{- if .OpenAPITypeFormat }}
          format: {{ .OpenAPITypeFormat }}
          {{- end }}
          nullable: {{ .Optional }}
        {{- end }}
    "New{{ .Name }}":
      type: object
      properties:
        {{- range .Properties }}
        {{- if not .ReadOnly }}
        "{{ .Name | toLowerCamelCase }}":
          type: {{ .OpenAPIType }}
          {{- if .OpenAPITypeFormat }}
          format: {{ .OpenAPITypeFormat }}
          {{- end }}
          nullable: {{ .Optional }}
        {{- end }}
        {{- end }}
    "Patch{{ .Name }}":
      type: object
      properties:
        {{- range .Properties }}
        {{- if not .ReadOnly }}
        "{{ .Name | toLowerCamelCase }}":
          type: {{ .OpenAPIType }}
          {{- if .OpenAPITypeFormat }}
          format: {{ .OpenAPITypeFormat }}
          {{- end }}
          nullable: true
        {{- end }}
        {{- end }}
    "Update{{ .Name }}":
      type: object
      properties:
        {{- range .Properties }}
        {{- if not .ReadOnly }}
        "{{ .Name | toLowerCamelCase }}":
          type: {{ .OpenAPIType }}
          {{- if .OpenAPITypeFormat }}
          format: {{ .OpenAPITypeFormat }}
          {{- end }}
          nullable: {{ .Optional }}
        {{- end }}
        {{- end }}
    {{- end }}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: [ ]
