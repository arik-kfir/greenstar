{{- if .model.Get -}}
// This file is generated by greenstar scripts. DO NOT EDIT.
// noinspection DuplicatedCode

import {{- "{" }}{{ .model.Name }}{{- "}" }} from "../../models/{{ .model.Name | lower }}.ts";
import {DateProperties} from "../../models/{{ .model.Name | lower }}.ts";
import {BaseAPIURL} from "../../services/util.ts"
import {useOperation, Method, Hook} from "../../util/operation.ts";
{{- if gt (len .model.Get.Parameters) 0 }}import {QueryNilValue} from "../../services/util.ts"{{- end }}

export interface Request {
    id: string
    {{- range $name, $p := .model.Get.Parameters }}
    {{ $name | toLowerCamelCase }}{{- if not $p.Required -}}?{{- end -}}: {{ $p.Type.TypeScriptType }}
    {{- end }}
}
export type Response = {{ .model.Name }} | undefined;

function buildURL(req: Request): string {
    const urlParams = new URLSearchParams();

    {{- range $name, $p := .model.Get.Parameters }}
    if (req.{{ $name | toLowerCamelCase }} !== undefined) {
        if (req.{{ $name | toLowerCamelCase }} === null) {
            urlParams.set("{{ $name | toLowerCamelCase }}", QueryNilValue)
        } else {
            {{- if eq $p.Type.TypeScriptType "Date" }}
            urlParams.set("{{ $name | toLowerCamelCase }}", req.{{ $name | toLowerCamelCase }}.toISOString())
            {{- else if eq $p.Type.TypeScriptType "number" }}
            urlParams.set("{{ $name | toLowerCamelCase }}", req.{{ $name | toLowerCamelCase }}+"")
            {{- else }}
            urlParams.set("{{ $name | toLowerCamelCase }}", req.{{ $name | toLowerCamelCase }})
            {{- end }}
        }
    }
    {{- end }}

    return `${BaseAPIURL}{{ .model.Path }}/${req.id}${urlParams.size ? "?" + urlParams.toString() : ""}`
}

export function useGet{{ .model.Name }}(): Hook<Request, Response> {
    const opts = {
        initial: undefined,
        method: 'GET' as Method,
        url: buildURL,
        dateProperties: DateProperties,
    }
    return useOperation<Request, Response>(opts)
}
{{- end }}
